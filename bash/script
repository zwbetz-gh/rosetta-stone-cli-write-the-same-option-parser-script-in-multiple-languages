#!/usr/bin/env bash

SCRIPT_NAME="./script"
HELP_USAGE="For help, run: ${SCRIPT_NAME} --help"
NAME_USAGE="<NAME> cannot be empty"
PREFIX_USAGE="<PREFIX> cannot be empty"
USAGE="\
Usage:
  ${SCRIPT_NAME} [OPTIONS] -- <NAME>

${NAME_USAGE}

OPTIONS:
  -h, --help              Show this help
  -u, --uppercase         Uppercase the <NAME>
  -p, --prefix <PREFIX>   Change the greeting prefix"

uppercase_option="false"
prefix_option="Hello"
name=""
backwards_name=""
today=""
output=""

handle_help() {
  echo -e "${USAGE}"
  exit 0
}

die() {
  echo "${HELP_USAGE}"
  exit 1
}

handle_empty_arg() {
  if [[ -z "${2}" ]]; then
    echo "${1}"
    die
  fi
}

handle_unknown_option() {
  echo "Unknown option: ${1}"
  die
}

uppercase() {
  echo "$(echo "${1}" | tr '[:lower:]' '[:upper:]')"
}

reverse() {
  echo "$(echo "${1}" | rev)"
}

get_today() {
  echo "$(date '+%F')"
}

while [[ ${#} -gt 0 ]]; do
  case ${1} in
    -h | --help)
      handle_help
      ;;
    -u | --uppercase)
      uppercase_option="true"
      shift
      ;;
    -p | --prefix)
      shift
      prefix_option="${1}"
      handle_empty_arg "${PREFIX_USAGE}" "${prefix_option}"
      shift
      ;;
    --)
      shift
      break
      ;;
    *)
      handle_unknown_option "${1}"
      ;;
  esac
done

name=${1}

if [[ -p /dev/stdin ]]; then
  name="$(cat -)"
fi

handle_empty_arg "${NAME_USAGE}" "${name}"

if [[ ${uppercase_option} == "true" ]]; then
  name="$(uppercase "${name}")"
fi

backwards_name="$(reverse "${name}")"
today="$(get_today)"

output="\
${prefix_option}, ${name}
Your name backwards is ${backwards_name}
Today is ${today}"

echo "${output}"

echo "Completed in ${SECONDS} s"
