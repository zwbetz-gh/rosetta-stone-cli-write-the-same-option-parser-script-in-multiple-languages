#!/usr/bin/env python

import sys
import time
from datetime import datetime, timezone

SCRIPT_NAME = "./script"
HELP_USAGE = "For help, run: {0} --help"
NAME_USAGE = "<NAME> cannot be empty"
PREFIX_USAGE = "<PREFIX> cannot be empty"
USAGE = """\
Usage:
  {0} [OPTIONS] -- <NAME>

{1}

OPTIONS:
  -h, --help              Show this help
  -u, --uppercase         Uppercase the <NAME>
  -p, --prefix <PREFIX>   Change the greeting prefix"""

start_time = time.time()
args = sys.argv[1:]
skip_next_iteration = False
seperator_index = None

uppercase_option = False
prefix_option = "Hello"
name_arg = ""
backwards_name = ""
today = ""
output = ""
duration = None


def handle_help():
    print(USAGE.format(SCRIPT_NAME, NAME_USAGE))
    sys.exit(0)


def die():
    print(HELP_USAGE.format(SCRIPT_NAME))
    sys.exit(1)


def handle_unknown_option(option):
    print("Unknown option: {0}".format(option))
    die()


def handle_empty_arg(arg_usage):
    print(arg_usage)
    die()


def get_prefix_option(index):
    try:
        return args[index]
    except IndexError:
        handle_empty_arg(PREFIX_USAGE)


def get_name_arg(index):
    try:
        return args[index]
    except IndexError:
        return ""


def piped_stdin_exists():
    return not sys.stdin.isatty()


def get_piped_stdin():
    return sys.stdin.read().strip()


def reverse_string(str):
    return str[::-1]


def get_today():
    return datetime.now(timezone.utc).strftime("%Y-%m-%d")


def get_duration_in_seconds(start_time_millis, end_time_millis):
    return round((end_time_millis - start_time_millis) * 1000, 2)


if len(args) == 0:
    handle_empty_arg(NAME_USAGE)

for i, arg in enumerate(args):
    if skip_next_iteration:
        skip_next_iteration = False
        continue
    elif arg == "-h" or arg == "--help":
        handle_help()
    elif arg == "-u" or arg == "--uppercase":
        uppercase_option = True
    elif arg == "-p" or arg == "--prefix":
        prefix_option = get_prefix_option(i + 1)
        skip_next_iteration = True
        continue
    elif arg == "--":
        name_arg = get_name_arg(i + 1)
        break
    else:
        handle_unknown_option(arg)

if piped_stdin_exists():
    name_arg = get_piped_stdin()

if name_arg == "":
    handle_empty_arg(NAME_USAGE)

if uppercase_option == True:
    name_arg = name_arg.upper()

backwards_name = reverse_string(name_arg)
today = get_today()

output = """\
{0}, {1}
Your name backwards is {2}
Today is {3}"""

print(output.format(prefix_option, name_arg, backwards_name, today))

duration = get_duration_in_seconds(start_time, time.time())

print("Completed in {0} s".format(duration))
